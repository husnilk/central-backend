datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String?
  lastName  String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     Task[]
  supervisor   User?      @relation("UserToSupervisor", fields: [supervisorId], references: [id])
  supervisorId Int?
  subordinates User[]     @relation("UserToSupervisor")
  supervisorRequestsSent      SupervisorRequest[] @relation("RequesterToSupervisorRequest")
  supervisorRequestsReceived  SupervisorRequest[] @relation("SupervisorToSupervisorRequest")
}

enum Role {
  USER
  ADMIN
}

model SupervisorRequest {
  id           Int      @id @default(autoincrement())
  requester    User     @relation("RequesterToSupervisorRequest", fields: [requesterId], references: [id])
  requesterId  Int
  supervisor   User     @relation("SupervisorToSupervisorRequest", fields: [supervisorId], references: [id])
  supervisorId Int
  status       String   @default("PENDING") // PENDING, APPROVED, REJECTED
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Task {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  priority    Priority  @default(MEDIUM)
  deadline    DateTime?
  percentage  Float     @default(0)
  status      Status    @default(TODO)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  author      User      @relation(fields: [authorId], references: [id])
  authorId    Int
  parent      Task?     @relation("TaskToTask", fields: [parentId], references: [id])
  parentId    Int?
  children    Task[]    @relation("TaskToTask")
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Status {
  TODO
  IN_PROGRESS
  DONE
}